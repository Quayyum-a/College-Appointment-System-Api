{
  "info": {
    "_postman_id": "b7f9f4a2-7b7c-4f25-9aa0-6c2a3f7080c1",
    "name": "College Appointment System API",
    "description": "Import this collection into Postman to test all endpoints with ready-made requests, variables, and scripts.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Health",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status is 200', () => pm.response.code === 200);",
                  "const json = pm.response.json();",
                  "pm.test('ok true', () => json && json.ok === true);"
                ]
              }
            }
          ],
          "response": []
        }
      ]
    },
    {
      "name": "Auth",
      "item": [
        {
          "name": "Register Student A1",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Student A1\",\n  \"email\": \"a1@example.com\",\n  \"password\": \"Pass12345\",\n  \"role\": \"student\"\n}"
            },
            "url": { "raw": "{{baseUrl}}/auth/register" }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Created 201', () => pm.response.code === 201);",
                  "const j = pm.response.json();",
                  "pm.collectionVariables.set('studentA1Id', j.id);"
                ]
              }
            }
          ]
        },
        {
          "name": "Register Student A2",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Student A2\",\n  \"email\": \"a2@example.com\",\n  \"password\": \"Pass12345\",\n  \"role\": \"student\"\n}"
            },
            "url": { "raw": "{{baseUrl}}/auth/register" }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Created 201', () => pm.response.code === 201);",
                  "const j = pm.response.json();",
                  "pm.collectionVariables.set('studentA2Id', j.id);"
                ]
              }
            }
          ]
        },
        {
          "name": "Register Professor P1",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Professor P1\",\n  \"email\": \"p1@example.com\",\n  \"password\": \"Pass12345\",\n  \"role\": \"professor\"\n}"
            },
            "url": { "raw": "{{baseUrl}}/auth/register" }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Created 201', () => pm.response.code === 201);",
                  "const j = pm.response.json();",
                  "pm.collectionVariables.set('professorP1Id', j.id);"
                ]
              }
            }
          ]
        },
        {
          "name": "Login Student A1",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"a1@example.com\",\n  \"password\": \"Pass12345\"\n}"
            },
            "url": { "raw": "{{baseUrl}}/auth/login" }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('OK 200', () => pm.response.code === 200);",
                  "pm.collectionVariables.set('studentA1Token', pm.response.json().token);"
                ]
              }
            }
          ]
        },
        {
          "name": "Login Student A2",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"a2@example.com\",\n  \"password\": \"Pass12345\"\n}"
            },
            "url": { "raw": "{{baseUrl}}/auth/login" }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('OK 200', () => pm.response.code === 200);",
                  "pm.collectionVariables.set('studentA2Token', pm.response.json().token);"
                ]
              }
            }
          ]
        },
        {
          "name": "Login Professor P1",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"p1@example.com\",\n  \"password\": \"Pass12345\"\n}"
            },
            "url": { "raw": "{{baseUrl}}/auth/login" }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('OK 200', () => pm.response.code === 200);",
                  "pm.collectionVariables.set('professorP1Token', pm.response.json().token);"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Availability",
      "item": [
        {
          "name": "Add Availability T1 (Professor)",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{professorP1Token}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"date\": \"2099-04-01\",\n  \"timeSlot\": \"10:00-10:30\"\n}"
            },
            "url": { "raw": "{{baseUrl}}/availability" }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Created 201', () => pm.response.code === 201);",
                  "pm.collectionVariables.set('availabilityT1Id', pm.response.json().id);"
                ]
              }
            }
          ]
        },
        {
          "name": "Add Availability T2 (Professor)",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{professorP1Token}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"date\": \"2099-04-01\",\n  \"timeSlot\": \"11:00-11:30\"\n}"
            },
            "url": { "raw": "{{baseUrl}}/availability" }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Created 201', () => pm.response.code === 201);",
                  "pm.collectionVariables.set('availabilityT2Id', pm.response.json().id);"
                ]
              }
            }
          ]
        },
        {
          "name": "List Availability for Professor P1",
          "request": {
            "method": "GET",
            "header": [],
            "url": { "raw": "{{baseUrl}}/availability/{{professorP1Id}}" }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('OK 200', () => pm.response.code === 200);",
                  "const slots = pm.response.json();",
                  "if (Array.isArray(slots)) {",
                  "  const t1 = slots.find(s => s.timeSlot === '10:00-10:30');",
                  "  const t2 = slots.find(s => s.timeSlot === '11:00-11:30');",
                  "  if (t1 && !pm.collectionVariables.get('availabilityT1Id')) pm.collectionVariables.set('availabilityT1Id', t1.id);",
                  "  if (t2 && !pm.collectionVariables.get('availabilityT2Id')) pm.collectionVariables.set('availabilityT2Id', t2.id);",
                  "}"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Appointments",
      "item": [
        {
          "name": "Book T1 (Student A1)",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{studentA1Token}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"availabilityId\": {{availabilityT1Id}}\n}"
            },
            "url": { "raw": "{{baseUrl}}/appointments" }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Created 201', () => pm.response.code === 201);",
                  "pm.collectionVariables.set('appointmentT1Id', pm.response.json().id);"
                ]
              }
            }
          ]
        },
        {
          "name": "Book T2 (Student A2)",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{studentA2Token}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"availabilityId\": {{availabilityT2Id}}\n}"
            },
            "url": { "raw": "{{baseUrl}}/appointments" }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Created 201', () => pm.response.code === 201);",
                  "pm.collectionVariables.set('appointmentT2Id', pm.response.json().id);"
                ]
              }
            }
          ]
        },
        {
          "name": "List Appointments (Student A1)",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{studentA1Token}}" }
            ],
            "url": { "raw": "{{baseUrl}}/appointments" }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('OK 200', () => pm.response.code === 200);"
                ]
              }
            }
          ]
        },
        {
          "name": "List Appointments (Professor P1)",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{professorP1Token}}" }
            ],
            "url": { "raw": "{{baseUrl}}/appointments" }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('OK 200', () => pm.response.code === 200);"
                ]
              }
            }
          ]
        },
        {
          "name": "Cancel Appointment T1 (Professor)",
          "request": {
            "method": "DELETE",
            "header": [
              { "key": "Authorization", "value": "Bearer {{professorP1Token}}" }
            ],
            "url": { "raw": "{{baseUrl}}/appointments/{{appointmentT1Id}}" }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('OK 200', () => pm.response.code === 200);",
                  "pm.test('Cancelled', () => pm.response.json().status === 'cancelled');"
                ]
              }
            }
          ]
        },
        {
          "name": "List Appointments (Student A1) After Cancel",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{studentA1Token}}" }
            ],
            "url": { "raw": "{{baseUrl}}/appointments" }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('OK 200', () => pm.response.code === 200);",
                  "const arr = pm.response.json();",
                  "pm.test('Empty after cancel', () => Array.isArray(arr) && arr.length === 0);"
                ]
              }
            }
          ]
        }
      ]
    }
  ],
  "event": [],
  "variable": [
    { "key": "baseUrl", "value": "http://localhost:4000" },
    { "key": "studentA1Id", "value": "" },
    { "key": "studentA2Id", "value": "" },
    { "key": "professorP1Id", "value": "" },
    { "key": "studentA1Token", "value": "" },
    { "key": "studentA2Token", "value": "" },
    { "key": "professorP1Token", "value": "" },
    { "key": "availabilityT1Id", "value": "" },
    { "key": "availabilityT2Id", "value": "" },
    { "key": "appointmentT1Id", "value": "" },
    { "key": "appointmentT2Id", "value": "" }
  ]
}
